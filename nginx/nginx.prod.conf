# Configuración de Nginx para Producción - Banking Portal
# Optimizada para rendimiento, seguridad y SEO

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Configuración de logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Configuración de rendimiento
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Configuración de buffers
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Compresión gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rdf+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        application/x-font-woff;

    # Configuración de cache
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # Configuración de upstream para backend (comentado - no hay backend local)
    # upstream backend {
    #     server banking-backend:8080;
    #     keepalive 32;
    # }

    # Configuración del servidor principal
    server {
        listen 4200;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Configuración de seguridad
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        # CSP más permisivo para permitir conexión al backend VPS
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' http://vps-5405471-x.dattaweb.com:9090;" always;

        # Configuración para SPA - redirigir todas las rutas a index.html
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache para index.html (sin cache para actualizaciones)
            location = /index.html {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
            }
        }

        # Cache para archivos estáticos
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Compresión adicional para archivos estáticos
            gzip_static on;
        }

        # Configuración para API - Proxy al backend (comentado - no hay backend local)
        # location /api/ {
        #     # Rate limiting para API
        #     limit_req zone=api burst=20 nodelay;
        #     
        #     # Proxy configuration
        #     proxy_pass http://backend;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection 'upgrade';
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_cache_bypass $http_upgrade;
        #     
        #     # Timeouts
        #     proxy_connect_timeout 30s;
        #     proxy_send_timeout 30s;
        #     proxy_read_timeout 30s;
        #     
        #     # Buffer configuration
        #     proxy_buffering on;
        #     proxy_buffer_size 4k;
        #     proxy_buffers 8 4k;
        #     proxy_busy_buffers_size 8k;
        # }

        # Proxy directo al backend de producción en VPS
        location /spf-msa-apex-core-service/ {
            proxy_pass http://vps-5405471-x.dattaweb.com:9090/spf-msa-apex-core-service/;
            proxy_set_header Host vps-5405471-x.dattaweb.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_server_name on;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Configuración para WebSocket (comentado - no hay backend local)
        # location /ws/ {
        #     proxy_pass http://backend;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }

        # Configuración para health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Configuración para favicon
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        # Configuración para robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log off;
        }

        # Configuración para archivos ocultos
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Manejo de errores personalizados
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Configuración para HTTPS (comentado - no hay certificados SSL)
    # server {
    #     listen 443 ssl;
    #     http2 on;
    #     server_name localhost;
    #     root /usr/share/nginx/html;
    #     index index.html;
    # 
    #     # Configuración SSL
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    # 
    #     # Configuración de seguridad adicional para HTTPS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    # 
    #     # Misma configuración que el servidor HTTP
    #     location / {
    #         try_files $uri $uri/ /index.html;
    #     }
    # 
    #     # location /api/ {
    #     #     limit_req zone=api burst=20 nodelay;
    #     #     proxy_pass http://backend;
    #     #     proxy_http_version 1.1;
    #     #     proxy_set_header Host $host;
    #     #     proxy_set_header X-Real-IP $remote_addr;
    #     #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     #     proxy_set_header X-Forwarded-Proto $scheme;
    #     # }
    # }

    # Configuración para redirección HTTP a HTTPS (comentado - no hay HTTPS)
    # server {
    #     listen 80;
    #     server_name localhost;
    #     return 301 https://$server_name$request_uri;
    # }
}
